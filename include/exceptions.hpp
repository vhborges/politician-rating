#ifndef EXCEPTIONS_HPP
#define EXCEPTIONS_HPP

// Standard libraries
#include <string>
#include <stdexcept>

using std::string;

class db_exception : public std::runtime_error
{
	protected:
		/**
		 * Generate the string error of the exception
		 * @param operation the data-base operation which caused the error
		 * @param function the function within the exception was throwed
		 * @param return_code the error code returned from sqlite
		 * @param errmsg the error message returned from sqlite
		 * @return the string generated by this method
		 */
		virtual string generate_string(
				string operation, string function, const int return_code,
				const char* errmsg);

	public:
		/** Constructor that receives the final error message */
		db_exception(string error_msg);

		/** Intermediate constructor.
		 * @param operation the database operation which caused the error
		 * @param function the function within the error was produced
		 * @param return_code the error code returned from the data base
		 * @param errmsg the error message generated by the data base
		 */
		db_exception(
				string operation, string function, const int return_code,
				const char* errmsg);
};

class politician_op_exception : public db_exception
{
	protected:
		/**
		 * Generate the string error of the exception
		 * @param operation the data-base operation which caused the error
		 * @param function the function within the exception was throwed
		 * @param return_code the error code returned from sqlite
		 * @param errmsg the error message returned from sqlite
		 * @return the string generated by this method
		 */
		string generate_string(
				string operation, string function, const int return_code,
				const char* errmsg);

	public:
		/** Class constructor.
		 * @param operation the database operation which caused the error
		 * @param function the function within the error was produced
		 * @param return_code the error code returned from the data base
		 * @param errmsg the error message generated by the data base
		 */
		politician_op_exception(
				string operation, string function, const int return_code,
				const char* errmsg);
};

class rating_op_exception : public db_exception
{
	protected:
		/**
		 * Generate the string error of the exception
		 * @param operation the data-base operation which caused the error
		 * @param function the function within the exception was throwed
		 * @param return_code the error code returned from sqlite
		 * @param errmsg the error message returned from sqlite
		 * @return the string generated by this method
		 */
		string generate_string(
				string operation, string function, const int return_code,
				const char* errmsg);

	public:
		/** Class constructor.
		 * @param operation the database operation which caused the error
		 * @param function the function within the error was produced
		 * @param return_code the error code returned from the data base
		 * @param errmsg the error message generated by the data base
		 */
		rating_op_exception(
				string operation, string function, const int return_code,
				const char* errmsg);
};

#endif
